{"version":3,"sources":["src/components/Border.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/screens/SHTAboutScreen.tsx"],"names":["Border","props","border","useColors","style","height","width","backgroundColor","marginTop","small","Spacing","tiny","marginBottom","Column","View","noTopMargin","Platform","OS","large","normal","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onMedium","onTg","onPressDiscord","FlexView","justifyContent","type","onPress","name","raised","reverse","color","reverseColor","containerStyle","flags","us","require","uk","cn","kr","Flag","locale","history","useHistory","location","useLocation","TouchableHighlight","push","pathname","marginHorizontal","Image","source","WebFooter","onPressAlchemy","padding","alignItems","Text","note","Constants","manifest","version","SHTAboutScreen","t","useTranslation","onPressHome","text","title"],"mappings":"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","file":"static/js/8.e7346e76.chunk.js","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"http://twitter.com/BTCST2020\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    \n    const onMedium = useLinker(\"https://btcst.medium.com/\", \"\", \"_blank\");\n    // const onPressReddit = useLinker(\"https://www.reddit.com/user/BTCStandardHashrate\", \"\", \"_blank\");\n    const onTg = useLinker(\"https://t.me/BTCSTCommunity\",\"\",\"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.com/channels/791170396316893255/791170396765945886\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <SocialIcon type=\"medium\" onPress={onMedium} />\n            <SocialIcon type=\"telegram\" onPress={onTg} />\n            {/* <SocialIcon type=\"twitch\" onPress={onPressReddit} /> */}\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport Column from \"../Column\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst flags = {\n    us: require(\"../../../assets/flags/us.png\"),\n    uk: require(\"../../../assets/flags/uk.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\")\n};\n\nconst WebFooter = () => {\n    const onPressAlchemy = useLinker(\n        \"https://certik.foundation/\",\n        \"\",\n        \"_blank\"\n    );\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n                <TouchableHighlight onPress={onPressAlchemy}>\n                    <Image\n                        source={require(\"../../../assets/certik-logo-w.png\")}\n                        style={{ width: 168, height: 40, marginTop: Spacing.tiny }}\n                    />\n                </TouchableHighlight>\n                <SocialIcons />\n                <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                    Built with ❤️ by Standard Hashrate (v{Constants.manifest.version})\n                </Text>\n                <FlexView style={{ marginTop: Spacing.small }}>\n                    <Flag name={\"uk\"} locale={\"en\"} />\n                    <Flag name={\"cn\"} locale={\"zh\"} />\n                    {/* <Flag name={\"kr\"} locale={\"ko\"} /> */}\n                </FlexView>\n            </View>\n        </Column>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={flags[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\n\nimport WebFooter from \"../components/web/WebFooter\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Screen from \"./Screen\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport FlexView from \"../components/FlexView\";\nimport { Spacing } from \"../constants/dimension\";\n\nconst SHTAboutScreen = () => {\n    const t = useTranslation();\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/standardhashrate\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/standardhashrate\", \"\", \"_blank\");\n    const onPressHome = useLinker(\"https://www.1-b.tc\", \"\", \"_blank\");\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"about\")} />\n                    <Text light={true} style={{marginBottom:Spacing.large}}>\n                        {t(\"about-desc\")}\n                    </Text>\n\n                    <Button title={t(\"home-page\")} onPress={onPressHome}/>\n                    <Border/>\n                    \n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\nexport default SHTAboutScreen;\n"],"sourceRoot":""}